@{
    ViewBag.Title = "Editor";
}

@*<link href="http://getbootstrap.com/dist/css/bootstrap.css" type="text/css" rel="stylesheet" />*@
@Styles.Render("~/Content/surveyEditor/css")

<div id="surveyEditorContainer"></div>

@section Scripts {
    @Scripts.Render("~/Scripts/dxSurvey/dxBroker.js")
    @Scripts.Render("~/bundles/surveyEditor")

    <script>
        var editorOptions = { showJSONEditorTab: true,  showEmbededSurveyTab: false };
        var survey = new SurveyEditor.SurveyEditor("surveyEditorContainer", editorOptions);

        // Add database id property to survey object
        Survey.JsonObject.metaData.addProperty("questionbase", { name: "internalId:number" });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "survey") {
                options.canShow = options.property.name != "surveyId";
            }
        });

        survey.render('surveyEditorContainer');

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "text") {
                options.canShow = options.property.name != "internalId";
            }
        });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "checkbox") {
                options.canShow = options.property.name != "internalId";
            }
        });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "radiogroup") {
                options.canShow = options.property.name != "internalId";
            }
        });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "dropdown") {
                options.canShow = options.property.name != "internalId";
            }
        });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "comment") {
                options.canShow = options.property.name != "internalId";
            }
        });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "rating") {
                options.canShow = options.property.name != "internalId";
            }
        });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "html") {
                options.canShow = options.property.name != "internalId";
            }
        });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "file") {
                options.canShow = options.property.name != "internalId";
            }
        });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "matrix") {
                options.canShow = options.property.name != "internalId";
            }
        });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "matrixdropdown") {
                options.canShow = options.property.name != "internalId";
            }
        });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "matrixdynamic") {
                options.canShow = options.property.name != "internalId";
            }
        });

        //survey.onCanShowProperty.add(function (sender, options) {
        //    if (options.obj.getType() == "matrixdynamic") {
        //        options.canShow = options.property.name != "internalId";
        //    }
        //});

        //set function on save callback
        survey.saveSurveyFunc = function () {
            $.ajax(
                '@Url.Action("SaveSurvey", "SurveyEditor", new { area="" })',
                {
                    method: "POST",
                    async: true,
                    data: { surveyJson: survey.text },
                    success: function (data, textStatus, jqXHR) {
                        survey.surveyValue.surveyId = data;
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert('ERROR - ' + errorThrown);
                    }
                });
        }
    </script>
}