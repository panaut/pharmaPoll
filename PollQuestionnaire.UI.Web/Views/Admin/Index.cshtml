@model IEnumerable<Questionnaire.Data.Survey>

@{
    ViewBag.Title = "Admin";
}

@*<link href="http://getbootstrap.com/dist/css/bootstrap.css" type="text/css" rel="stylesheet" />*@
@Styles.Render("~/Content/surveyEditor/css")

<br />
<p>
    New Survey
    <a href="#" class="startSurvey" data-toggle="tooltip" title="New Survey"> <i class="glyphicon glyphicon-plus"></i></a>
</p>
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                @*<th width="0"></th>*@
                <th>Title</th>
                <th width="25"></th>
                <th width="25"></th>
                <th width="25"></th>
                <th width="25"></th>
                <th width="25"></th>
                <th width="25"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr data-surveyId="@item.Id">
                    @*<th scope="row">@item.Id</th>*@
                    <td>@item.Title</td>
                    @if (!item.IsActive)
                {
                        <td>
                            <a href="#" class="startSurvey" data-toggle="tooltip" title="Publish Survey">
                                <i class="glyphicon glyphicon-play"></i>
                            </a>
                            <a href="#" class="hidden stopSurvey" data-toggle="tooltip" title="Stop Survey">
                                <i class="glyphicon glyphicon-stop"></i>
                            </a>
                        </td>
                    }
                    else
                    {
                        <td>
                            <a href="#" class="hidden" data-toggle="tooltip" title="Publish Survey">
                                <i class="glyphicon glyphicon-play startSurvey"></i>
                            </a>
                            <a href="#" data-toggle="tooltip" title="Stop Survey">
                                <i class="glyphicon glyphicon-stop stopSurvey"></i>
                            </a>
                        </td>
                    }
                    <td><a href="two" data-toggle="tooltip" title="Download file for translation"> <i class="glyphicon glyphicon-download"></i></a></td>
                    <td><a href="two" data-toggle="tooltip" title="Upload translation file"> <i class="glyphicon glyphicon-upload"></i></a></td>
                    <td><a href="two" title="Edit Survey" data-toggle="modal" data-target="#modal-fullscreen"> <i id=@string.Concat(item.Id, "-glyphicon-pencil") class="glyphicon glyphicon-pencil"></i></a></td>
                    <td><a href="three" data-toggle="tooltip" title="Delete Survey"> <i id=@string.Concat(item.Id, "-glyphicon-trash") class="glyphicon glyphicon-trash"></i></a></td>
                    <td><span class="badge">14</span></td>
                </tr>
            }
        </tbody>
    </table>
@*modal div*@
    <div class="modal modal-fullscreen fade" id="modal-fullscreen" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Survey Editor</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="surveyEditorContainer"></div>
                </div>
                @*<div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Save changes</button>
                </div>*@
            </div>
        </div>
    </div>

@*list view implementation*@   
 @*<br />
    <ul class="list-group col-md-3">
        @foreach (var item in Model)
        {
            <li class="list-group-item">
                <div>@item.Title</div>
                @if (item.IsActive)
                {
                    <a href="one"> <i class="glyphicon glyphicon-play"></i></a>
                }
                else
                {
                    <a href="one"> <i class="glyphicon glyphicon-stop"></i></a>
                }
                <a href="two" alt="Download translation file."> <i class="glyphicon glyphicon-download"></i></a>
                <a href="two" alt="Upload translation file."> <i class="glyphicon glyphicon-upload"></i></a>
                <a href="three"> <i class="glyphicon glyphicon-trash"></i></a>
                <span class="badge">14</span>
            </li>
        }
    </ul>
    <br />*@

    @section Scripts
{
@Scripts.Render("~/Scripts/dxSurvey/dxBroker.js")
@Scripts.Render("~/bundles/surveyEditor")
        <script>
            $("document").ready(function () {
                $(".startSurvey").click(function (sender) {
                    var surveyId = $(this).closest('tr').attr("data-surveyId");
                    var $startBtn = $(this);
                    var $stopBtn = $(this).siblings('.stopSurvey');

                    $.ajax(
                        '@Url.Action("ActivateSurvey", "Admin", new { area="" })',
                        {
                            method: "POST",
                            async: true,
                            data: { surveyId: surveyId },
                            dataType: 'text',
                            success: function (data, textStatus, jqXHR) {
                                // Change 'Play' into 'Stop'
                                $stopBtn.removeClass('hidden');
                                $startBtn.addClass('hidden');
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                alert('ERROR - ' + errorThrown);
                            }
                        });
                });
                $("document").ready(function () {
                    $(".Find").click(function (sender) {
                        var surveyId = $(this).closest('tr').attr("data-surveyId");
                        var $startBtn = $(this);
                        var $stopBtn = $(this).siblings('.Find');

                        $.ajax(
                            '@Url.Action("Find", "Admin", new { area="" })',
                            {
                                method: "POST",
                                async: true,
                                data: { surveyId: surveyId },
                                dataType: 'text',
                                success: function (data, textStatus, jqXHR) {
                                    // Change 'Play' into 'Stop'
                                    $stopBtn.removeClass('hidden');
                                    $startBtn.addClass('hidden');
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    alert('ERROR - ' + errorThrown);
                                }
                            });
                    });

                $(".stopSurvey").click(function (sender) {
                    var surveyId = $(this).closest('tr').attr("data-surveyId");
                    var $stopBtn = $(this);
                    var $startBtn = $(this).siblings('.startSurvey');

                    $.ajax(
                        '@Url.Action("DeactivateSurvey", "Admin", new { area="" })',
                        {
                            method: "POST",
                            async: true,
                            data: { surveyId: surveyId },
                            dataType: 'text',
                            success: function (data, textStatus, jqXHR) {
                                // Change 'Play' into 'Stop'
                                $startBtn.removeClass('hidden');
                                $stopBtn.addClass('hidden');
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                alert('ERROR - ' + errorThrown);
                            }
                        });
                });
            })

// survey editor scripting

        var editorOptions = { showJSONEditorTab: true,  showEmbededSurveyTab: false };
        var survey = new SurveyEditor.SurveyEditor("surveyEditorContainer", editorOptions);

        // Add database id property to survey object
        Survey.JsonObject.metaData.addProperty("questionbase", { name: "internalId:number" });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "survey") {
                options.canShow = options.property.name != "surveyId";
            }
        });

        survey.render('surveyEditorContainer');

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "text") {
                options.canShow = options.property.name != "internalId";
            }
        });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "checkbox") {
                options.canShow = options.property.name != "internalId";
            }
        });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "radiogroup") {
                options.canShow = options.property.name != "internalId";
            }
        });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "dropdown") {
                options.canShow = options.property.name != "internalId";
            }
        });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "comment") {
                options.canShow = options.property.name != "internalId";
            }
        });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "rating") {
                options.canShow = options.property.name != "internalId";
            }
        });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "html") {
                options.canShow = options.property.name != "internalId";
            }
        });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "file") {
                options.canShow = options.property.name != "internalId";
            }
        });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "matrix") {
                options.canShow = options.property.name != "internalId";
            }
        });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "matrixdropdown") {
                options.canShow = options.property.name != "internalId";
            }
        });

        survey.onCanShowProperty.add(function (sender, options) {
            if (options.obj.getType() == "matrixdynamic") {
                options.canShow = options.property.name != "internalId";
            }
        });

        //survey.onCanShowProperty.add(function (sender, options) {
        //    if (options.obj.getType() == "matrixdynamic") {
        //        options.canShow = options.property.name != "internalId";
        //    }
        //});

        //set function on save callback
        survey.saveSurveyFunc = function () {
            $.ajax(
                '@Url.Action("SaveSurvey", "SurveyEditor", new { area="" })',
                {
                    method: "POST",
                    async: true,
                    data: { surveyJson: survey.text },
                    success: function (data, textStatus, jqXHR) {
                        survey.surveyValue.surveyId = data;
                        alert("Your Survey has been succesfully saved!");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert('ERROR - ' + errorThrown);
                    }
                });
        }

// .modal-backdrop classes

            $(".modal-transparent").on('show.bs.modal', function () {
                setTimeout(function () {
                    $(".modal-backdrop").addClass("modal-backdrop-transparent");
                }, 0);
            });
            $(".modal-transparent").on('hidden.bs.modal', function () {
                $(".modal-backdrop").addClass("modal-backdrop-transparent");
            });

            $(".modal-fullscreen").on('show.bs.modal', function () {
                setTimeout(function () {
                    $(".modal-backdrop").addClass("modal-backdrop-fullscreen");
                }, 0);
            });
            $(".modal-fullscreen").on('hidden.bs.modal', function () {
                $(".modal-backdrop").addClass("modal-backdrop-fullscreen");
            });
</script>
    }

