@using PollQuestionnaire.UI.Web.Resources;

@{
    ViewBag.Title = "PatQueSurvey";
    Layout = "~/Views/Shared/_LayoutSurvey.cshtml";
}

<div class="alert alert-warning hidden" id="alert">
    <strong>@LocalizedResources.patque_noSurvey</strong>
</div>

<div id="surveyElement"></div>

<div class="modal fade" id="resumeModal" data-dismiss="modal" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="resumeModal" aria-hidden="true">
    <div class="modal-dialog" role="dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h5 class="modal-title">@LocalizedResources.patque_dialog_resume_title</h5>
            </div>
            <div class="modal-body">
                <div class="row">
                    <h4 style="text-align:justify;">
                        @LocalizedResources.patque_dialog_resume_text1
                    </h4>
                    <h4 style="text-align:justify;">
                        @LocalizedResources.patque_dialog_resume_text2_noEmail
                    </h4>
                </div>
                <div class="row"></div>
                <div class="row" style="text-align:center">
                    <a href="#" title="@LocalizedResources.patque_dialog_clickForClipboard"><h5 id="resumeLink" onclick="copyToClipboard(this)"></h5></a>
                </div>

                <div class="row"></div>
                <div class="row">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                        <input id="emailAddress" type="email" class="form-control" name="email" placeholder="Email" required>
                    </div>
                </div>
                <div id="incorrectEmailWarning" hidden class="row">
                    <h5 style="color: red; float: right">@LocalizedResources.patque_dialog_resume_emailWarning</h5>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="sendEmail()">@LocalizedResources.patque_dialog_resume_btnSendEmail</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal">@LocalizedResources.patque_dialog_resume_btnClose</button>
            </div>
        </div>
    </div>
    @*<footer>
            <p>&copy; @DateTime.Now.Year - EuropaColon</p>
        </footer>*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/survey")
    @*@Scripts.Render("~/Scripts/sortablejs/sortable.js")*@
    @*@Scripts.Render("~/Scripts/surveyjs/widgets/sortable.js")*@

    <script>
        var localizedStrings = @Html.Raw(ViewBag.localizedStrings);

        var _codeSurveyId = '@ViewBag.codeSurveyId';

        // Construct Survey Specific Cokie Name
        var completedCookieName = _codeSurveyId + '-surveyCompleted';

        // Survey specific Keys for Items in Local Storage
        var sessionCodeKey = 'pq-' + _codeSurveyId + '-sessionCode';
        var tempSurveyResultsKey = 'pq-' + _codeSurveyId + '-tempSurveyResults';
        var lastPageVisitedKey = 'pq-' + _codeSurveyId + '-lastPageVisited';

        var _language = '@ViewBag.language';

        if ('@ViewBag.sessionCode' != '')
            localStorage.setItem(sessionCodeKey, '@ViewBag.sessionCode');

        var completedCookie = getCookie(completedCookieName)
        if (completedCookie == 'true') {
            $('#continueLater').addClass('hidden');
        }

        //survey.cookie
        document.cookie.json = true;

        // An instance of the survey
        var _surveyModel;

        // Ajax load
        loadSurvey(_codeSurveyId, '@ViewBag.sessionCode');

        function initializeSurvey() {
            Survey.JsonObject.metaData.addProperty("survey", { name: "internalId:number" });
            Survey.JsonObject.metaData.addProperty("survey", { name: "surveyCode:string" });
            Survey.JsonObject.metaData.addProperty("page", { name: "internalId:number" });
            Survey.JsonObject.metaData.addProperty("panel", { name: "internalId:number" });
            Survey.JsonObject.metaData.addProperty("questionbase", { name: "internalId:number" });
            Survey.JsonObject.metaData.addProperty("multipletextitem", { name: "internalId:number" });
            Survey.JsonObject.metaData.addProperty("matrixdropdowncolumn", { name: "internalId:number" });

            //Survey.JsonObject.metaData.addProperty("checkbox", {
            //    name: "renderAs", default: "standard", choices: ["standard", "sortablejs"]
            //});

            //// Add SortableJs Widget
            //Survey.CustomWidgetCollection.Instance.addCustomWidget(widgetSortablejs);

            // Add missing localization
            Survey.surveyLocalization.locales['sr'] = customSurveyStringsSerbian;
            Survey.surveyLocalization.locales['hu'] = customSurveyStringsHungarian;
            Survey.surveyLocalization.locales['it'] = customSurveyStringsItalian;
            Survey.surveyLocalization.locales['es'] = customSurveyStringsSpanish;
            Survey.surveyLocalization.locales['at'] = customSurveyStringsAustrian;
            Survey.surveyLocalization.locales['pt'] = customSurveyStringsPortuguese;
            Survey.surveyLocalization.locales['be'] = customSurveyStringsBelgian;

            Survey.defaultBootstrapCss = {
                matrix: { root: "table table-striped" },
                text: "form-control input-lg col-xs-4",
                comment: "form-control input-lg",
                navigationButton: "btn btn-primary"
            };

            Survey.defaultBootstrapCss.navigationButton = "btn btn-primary";
            Survey.Survey.cssType = "bootstrap";

            // Create a new survey model and define a Survey Specific Cookie
            _surveyModel = new Survey.Model({ cookieName: completedCookieName });

            _surveyModel.onValueChanged.add(function (sender, options) {
                localStorage.setItem(tempSurveyResultsKey, JSON.stringify(sender.data));
                localStorage.setItem(lastPageVisitedKey, sender.currentPageNo);
            });

            return _surveyModel;
        }

        function loadSurvey(srvCode, explicitSessionCode) {
            spinStart();
            $.ajax(
                '@Url.Action("GetActiveSurvey", "Survey", new { area="" })',
                {
                    method: "GET",
                    async: true,
                    data: { surveyCode: srvCode, lang: _language },
                    dataType: 'json',
                    success: function (data, textStatus, jqXHR) {
                        survey = initializeSurvey();
                        survey.setJsonObject(data);

                        if (!explicitSessionCode || explicitSessionCode == undefined || explicitSessionCode == '' || explicitSessionCode.length == 0) {
                            // A session is not requested explicitly - load local results if any
                            var dataAsString = localStorage.getItem(tempSurveyResultsKey);
                            survey.data = JSON.parse(dataAsString);
                            var currentPageNum = localStorage.getItem(lastPageVisitedKey);
                            survey.currentPageNo = currentPageNum;

                            $("#surveyElement").Survey({
                                model: survey,
                                onComplete: saveResults
                            });

                            spinStop();
                        }
                        else {
                            // The session is explicitly requested - let's load it
                            loadOngoingSession(survey, srvCode, explicitSessionCode);
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        spinStop();

                        // Show no-survey message
                        $('#alert').removeClass('hidden');
                        showMessage(
                            '@LocalizedResources.patque_dialog_error_caption',
                            '@LocalizedResources.patque_dialog_error_surveyLoadFailed');
                    }
                });
        };

        function loadOngoingSession(survey, srvCode, sesCode) {
            spinStart();

            $.ajax(
                '@Url.Action("GetActiveSession", "Survey", new { area="" })',
                {
                    method: "GET",
                    async: true,
                    data: { surveyCode: srvCode, sessionCode: sesCode },
                    dataType: 'json',
                    success: function (data, textStatus, jqXHR) {
                        survey.data = JSON.parse(data.JsonResults);
                        survey.currentPageNo = data.LastPageVisited;

                        localStorage.setItem(tempSurveyResultsKey, data.JsonResults);
                        localStorage.setItem(lastPageVisitedKey, data.LastPageVisited);
                        localStorage.setItem(sessionCodeKey, sesCode);

                        $("#surveyElement").Survey({
                            model: survey,
                            onComplete: saveResults
                        });

                        spinStop();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        showMessage('@LocalizedResources.patque_dialog_error_caption', '@LocalizedResources.patque_dialog_error_sessionNotFound');
                        spinStop();
                    }
                });
        };

        $('.dropdown-menu li.language').on('click', function (sender) {
            var newUrl = '@Url.Action("PatQueSurvey", "Survey", new { area="", surveyCode="__surveyCode__" })';
            newUrl = newUrl.replace('__surveyCode__', _codeSurveyId);

            var session = localStorage.getItem(sessionCodeKey);

            newUrl = newUrl + '&lang=' + $(this).attr('lang');

            window.location.href = newUrl;
        });

        function resetSurvey() {
            getConfirmation(
                '@LocalizedResources.patque_dialog_resetWarningTitle',
                '@LocalizedResources.patque_dialog_resetWarningText',
                doReset);
        }

        function downloadPdf() {
            $.ajax(
                '@Url.Action("VerifySurveyPdf", "Survey", new { area="" })',
                {
                    method: "GET",
                    async: true,
                    data: { surveyCode: _codeSurveyId, lang: _language },
                    dataType: 'text',
                    success: function (data, textStatus, jqXHR) {
                        if (data && data.toLowerCase() == 'true') {
                            var dloadURL = '@Url.Action("DownloadPdf", "Survey", new { surveyCode = "__surveyCode__", area = "" })';
                            dloadURL = dloadURL.replace('__surveyCode__', _codeSurveyId);
                            dloadURL = dloadURL + '&lang=' + _language;

                            window.location.href = dloadURL;
                        } else {
                            showMessage(
                            '@LocalizedResources.patque_dialog_error_caption',
                            '@LocalizedResources.patque_dialog_error_pdfNotFound');
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        showMessage(
                            '@LocalizedResources.patque_dialog_error_caption',
                            '@LocalizedResources.patque_dialog_error_errorVerifyingPdfExistence');
                    }
                });
        }

        function doReset(sender) {
            // Make sure that Save Survey link is visible
            // Remove ContinueLater link
            $('#continueLater').removeClass('hidden');

            localStorage.removeItem(tempSurveyResultsKey);
            localStorage.removeItem(lastPageVisitedKey);
            localStorage.removeItem(sessionCodeKey);

            // Invalidate completion cookie, if any
            invalidateCookie(completedCookieName);

            _surveyModel.clear();
            _surveyModel.render('survey');
        }

        function saveResults(survey, isIncomoplete) {
            if (localStorage.getItem(tempSurveyResultsKey) == null || localStorage.getItem(tempSurveyResultsKey) == '') {
                return;
            }

            spinStart();

            var surveyCode = survey.surveyCode;
            var sessionCode = localStorage.getItem(sessionCodeKey);

            var lastVisitedPage = localStorage.getItem(lastPageVisitedKey);
            $.ajax(
                '@Url.Action("SaveResults", "Survey", new { area="" })',
                {
                    method: "POST",
                    async: true,
                    data: {
                        surveyId: survey.internalId,
                        jsonResults: JSON.stringify(survey.data),
                        sessionCode: sessionCode,
                        lastVisitedPageIndex: lastVisitedPage,
                        isFinal: !isIncomoplete
                    },
                    dataType: 'text',
                    success: function (data, textStatus, jqXHR) {
                        spinStop();

                        // Update session code
                        sessionCode = data;
                        localStorage.setItem(sessionCodeKey, sessionCode);

                        if (isIncomoplete) {
                            var resumeLink = '';
                            if (!_language || _language == undefined || _language == '' || _language.length == 0) {
                                resumeLink = '@Url.Action("PatQueSurvey", "Survey", new { area="", surveyCode="__surveyCode__", sessionCode="__sessionCode__" })';
                            }
                            else {
                                resumeLink = '@Url.Action("PatQueSurvey", "Survey", new { area="", surveyCode="__surveyCode__", sessionCode="__sessionCode__", lang="__language__" })';
                                resumeLink = resumeLink.replace("__language__", _language);
                            }

                            resumeLink = resumeLink.replace("__surveyCode__", surveyCode);
                            resumeLink = resumeLink.replace("__sessionCode__", data);

                            var entireLink = window.location.origin + '__resumeLink__';
                            //var entireLink = document.domain + '__resumeLink__';
                            entireLink = entireLink.replace("__resumeLink__", resumeLink);

                            showResumeModal(entireLink);
                        } else {
                            // Remove ContinueLater link
                            $('#continueLater').addClass('hidden');
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        spinStop();
                        showMessage('@LocalizedResources.patque_dialog_error_caption', '@LocalizedResources.patque_dialog_error_saveSessionFailed');
                    }
                });
        }

        function showResumeModal(resumeLink) {
            $('#resumeLink').html(resumeLink);
            $('#resumeModal').modal('show');
        }

        function sendEmail() {
            var eml = $('#emailAddress').val();
            var resLink = $('#resumeLink').html();

            if (validateEmail(eml)) {
                $('#incorrectEmailWarning').attr('hidden', true);

                $.ajax(
                    '@Url.Action("SendEmail", "Survey", new { area="" })',
                    {
                        method: "POST",
                        async: true,
                        data: { resumeLink: resLink, email: eml },
                        success: function (data, textStatus, jqXHR) {

                        }
                    });

                // Delete email field contents
                $('#emailAddress').val('');

                // Hide Modal
                $('#resumeModal').modal('hide');
            }
            else {
                $('#incorrectEmailWarning').attr('hidden', false);
            }
        }

        function validateEmail(mail) {
            var emailRegex = /^([a-zA-Z0-9_\-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
            if (emailRegex.test(mail)) {
                return true
            }
            else {
                return false
            }
        }

        function copyToClipboard(elem) {
            // create hidden text element, if it doesn't already exist
            var targetId = "_hiddenCopyText_";
            var isInput = elem.tagName === "INPUT" || elem.tagName === "TEXTAREA";
            var origSelectionStart, origSelectionEnd;
            if (isInput) {
                // can just use the original source element for the selection and copy
                target = elem;
                origSelectionStart = elem.selectionStart;
                origSelectionEnd = elem.selectionEnd;
            } else {
                // must use a temporary form element for the selection and copy
                target = document.getElementById(targetId);
                if (!target) {
                    var target = document.createElement("textarea");
                    target.style.position = "absolute";
                    target.style.left = "-9999px";
                    target.style.top = "0";
                    target.id = targetId;
                    document.body.appendChild(target);
                }
                target.textContent = elem.textContent;
            }
            // select the content
            var currentFocus = document.activeElement;
            target.focus();
            target.setSelectionRange(0, target.value.length);

            // copy the selection
            var succeed;
            try {
                succeed = document.execCommand("copy");
            } catch (e) {
                succeed = false;
            }
            // restore original focus
            if (currentFocus && typeof currentFocus.focus === "function") {
                currentFocus.focus();
            }

            if (isInput) {
                // restore prior selection
                elem.setSelectionRange(origSelectionStart, origSelectionEnd);
            } else {
                // clear temporary content
                target.textContent = "";
            }
            return succeed;
        }

        function getCookie(name) {
            var value = "; " + document.cookie;
            var parts = value.split("; " + name + "=");
            if (parts.length == 2) return parts.pop().split(";").shift();
        }

        var invalidateCookie = function (name) {
            document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';
        };
    </script>
}

